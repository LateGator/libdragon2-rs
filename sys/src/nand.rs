/* automatically generated by rust-bindgen 0.72.0 */

pub const NAND_BLOCK_SIZE: u32 = 16384;
pub const NAND_PAGE_SIZE: u32 = 512;
pub type nand_addr_t = u32;
pub const nand_mmap_flags_t_NAND_MMAP_ENCRYPTED: nand_mmap_flags_t = 1;
pub type nand_mmap_flags_t = ::core::ffi::c_uint;
unsafe extern "C" {
    pub fn nand_init();
    pub fn nand_get_size() -> ::core::ffi::c_int;
    pub fn nand_read_pages(
        addr: nand_addr_t,
        npages: ::core::ffi::c_int,
        buffer: *mut ::core::ffi::c_void,
        spare: *mut ::core::ffi::c_void,
        ecc: bool,
    ) -> ::core::ffi::c_int;
    pub fn nand_write_pages(
        addr: nand_addr_t,
        npages: ::core::ffi::c_int,
        buffer: *const ::core::ffi::c_void,
        ecc: bool,
    ) -> ::core::ffi::c_int;
    pub fn nand_erase_block(addr: nand_addr_t) -> ::core::ffi::c_int;
    pub fn nand_read_data(
        addr: nand_addr_t,
        buffer: *mut ::core::ffi::c_void,
        len: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn nand_mmap_begin();
    pub fn nand_mmap(
        pi_address: u32,
        blocks: *mut i16,
        flags: nand_mmap_flags_t,
    ) -> ::core::ffi::c_int;
    pub fn nand_mmap_end();
    pub fn nand_compute_page_ecc(buf: *const u8, ecc: *mut u8);
}
