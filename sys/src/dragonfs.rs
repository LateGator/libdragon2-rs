/* automatically generated by rust-bindgen 0.72.0 */

pub const DFS_DEFAULT_LOCATION: u32 = 0;
pub const MAX_FILENAME_LEN: u32 = 243;
pub const MAX_DIRECTORY_DEPTH: u32 = 100;
pub const DFS_ESUCCESS: u32 = 0;
pub const DFS_EBADINPUT: i32 = -1;
pub const DFS_ENOFILE: i32 = -2;
pub const DFS_EBADFS: i32 = -3;
pub const DFS_ENFILE: i32 = -4;
pub const DFS_EBADHANDLE: i32 = -5;
pub const DFS_ENOMEM: i32 = -4;
pub const FLAGS_FILE: u32 = 0;
pub const FLAGS_DIR: u32 = 1;
pub const FLAGS_EOF: u32 = 2;
unsafe extern "C" {
    pub fn dfs_init(base_fs_loc: u32) -> ::core::ffi::c_int;
    pub fn dfs_open(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;
    pub fn dfs_read(
        buf: *mut ::core::ffi::c_void,
        size: ::core::ffi::c_int,
        count: ::core::ffi::c_int,
        handle: u32,
    ) -> ::core::ffi::c_int;
    pub fn dfs_seek(
        handle: u32,
        offset: ::core::ffi::c_int,
        origin: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn dfs_tell(handle: u32) -> ::core::ffi::c_int;
    pub fn dfs_close(handle: u32) -> ::core::ffi::c_int;
    pub fn dfs_eof(handle: u32) -> ::core::ffi::c_int;
    pub fn dfs_size(handle: u32) -> ::core::ffi::c_int;
    pub fn dfs_rom_addr(path: *const ::core::ffi::c_char) -> u32;
    pub fn dfs_rom_size(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;
    pub fn dfs_strerror(error: ::core::ffi::c_int) -> *const ::core::ffi::c_char;
    pub fn dfs_chdir(path: *const ::core::ffi::c_char) -> ::core::ffi::c_int;
    pub fn dfs_dir_findfirst(
        path: *const ::core::ffi::c_char,
        buf: *mut ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    pub fn dfs_dir_findnext(buf: *mut ::core::ffi::c_char) -> ::core::ffi::c_int;
}
