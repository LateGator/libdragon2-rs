/* automatically generated by rust-bindgen 0.72.0 */

pub const TF_ONE_SHOT: u32 = 0;
pub const TF_CONTINUOUS: u32 = 1;
pub const TF_DISABLED: u32 = 2;
pub type timer_callback1_t = ::core::option::Option<unsafe extern "C" fn(ovfl: ::core::ffi::c_int)>;
pub type timer_callback2_t = ::core::option::Option<
    unsafe extern "C" fn(ovfl: ::core::ffi::c_int, ctx: *mut ::core::ffi::c_void),
>;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct timer_link {
    pub left: u32,
    pub set: u32,
    pub ovfl: ::core::ffi::c_int,
    pub flags: ::core::ffi::c_int,
    pub __bindgen_anon_1: timer_link__bindgen_ty_1,
    pub ctx: *mut ::core::ffi::c_void,
    pub next: *mut timer_link,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union timer_link__bindgen_ty_1 {
    pub callback: timer_callback1_t,
    pub callback_with_context: timer_callback2_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of timer_link__bindgen_ty_1"]
        [::core::mem::size_of::<timer_link__bindgen_ty_1>() - 4usize];
    ["Alignment of timer_link__bindgen_ty_1"]
        [::core::mem::align_of::<timer_link__bindgen_ty_1>() - 4usize];
    ["Offset of field: timer_link__bindgen_ty_1::callback"]
        [::core::mem::offset_of!(timer_link__bindgen_ty_1, callback) - 0usize];
    ["Offset of field: timer_link__bindgen_ty_1::callback_with_context"]
        [::core::mem::offset_of!(timer_link__bindgen_ty_1, callback_with_context) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of timer_link"][::core::mem::size_of::<timer_link>() - 28usize];
    ["Alignment of timer_link"][::core::mem::align_of::<timer_link>() - 4usize];
    ["Offset of field: timer_link::left"][::core::mem::offset_of!(timer_link, left) - 0usize];
    ["Offset of field: timer_link::set"][::core::mem::offset_of!(timer_link, set) - 4usize];
    ["Offset of field: timer_link::ovfl"][::core::mem::offset_of!(timer_link, ovfl) - 8usize];
    ["Offset of field: timer_link::flags"][::core::mem::offset_of!(timer_link, flags) - 12usize];
    ["Offset of field: timer_link::ctx"][::core::mem::offset_of!(timer_link, ctx) - 20usize];
    ["Offset of field: timer_link::next"][::core::mem::offset_of!(timer_link, next) - 24usize];
};
pub type timer_link_t = timer_link;
unsafe extern "C" {
    pub fn timer_init();
    pub fn timer_close();
    pub fn timer_ticks() -> ::core::ffi::c_longlong;
    pub fn new_timer(
        ticks: ::core::ffi::c_int,
        flags: ::core::ffi::c_int,
        callback: timer_callback1_t,
    ) -> *mut timer_link_t;
    pub fn new_timer_context(
        ticks: ::core::ffi::c_int,
        flags: ::core::ffi::c_int,
        callback: timer_callback2_t,
        ctx: *mut ::core::ffi::c_void,
    ) -> *mut timer_link_t;
    pub fn start_timer(
        timer: *mut timer_link_t,
        ticks: ::core::ffi::c_int,
        flags: ::core::ffi::c_int,
        callback: timer_callback1_t,
    );
    pub fn start_timer_context(
        timer: *mut timer_link_t,
        ticks: ::core::ffi::c_int,
        flags: ::core::ffi::c_int,
        callback: timer_callback2_t,
        ctx: *mut ::core::ffi::c_void,
    );
    pub fn restart_timer(timer: *mut timer_link_t);
    pub fn stop_timer(timer: *mut timer_link_t);
    pub fn delete_timer(timer: *mut timer_link_t);
}
