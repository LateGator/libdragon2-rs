/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xm_context_s {
    _unused: [u8; 0],
}
pub type xm_context_t = xm_context_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct waveform_s {
    _unused: [u8; 0],
}
pub type waveform_t = waveform_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xm64player_s {
    pub ctx: *mut xm_context_t,
    pub fd: ::core::ffi::c_int,
    pub first_ch: ::core::ffi::c_int,
    pub playing: bool,
    pub stop_requested: bool,
    pub looping: bool,
    pub seek: xm64player_s__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xm64player_s__bindgen_ty_1 {
    pub patidx: ::core::ffi::c_int,
    pub row: ::core::ffi::c_int,
    pub tick: ::core::ffi::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of xm64player_s__bindgen_ty_1"]
        [::core::mem::size_of::<xm64player_s__bindgen_ty_1>() - 12usize];
    ["Alignment of xm64player_s__bindgen_ty_1"]
        [::core::mem::align_of::<xm64player_s__bindgen_ty_1>() - 4usize];
    ["Offset of field: xm64player_s__bindgen_ty_1::patidx"]
        [::core::mem::offset_of!(xm64player_s__bindgen_ty_1, patidx) - 0usize];
    ["Offset of field: xm64player_s__bindgen_ty_1::row"]
        [::core::mem::offset_of!(xm64player_s__bindgen_ty_1, row) - 4usize];
    ["Offset of field: xm64player_s__bindgen_ty_1::tick"]
        [::core::mem::offset_of!(xm64player_s__bindgen_ty_1, tick) - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of xm64player_s"][::core::mem::size_of::<xm64player_s>() - 28usize];
    ["Alignment of xm64player_s"][::core::mem::align_of::<xm64player_s>() - 4usize];
    ["Offset of field: xm64player_s::ctx"][::core::mem::offset_of!(xm64player_s, ctx) - 0usize];
    ["Offset of field: xm64player_s::fd"][::core::mem::offset_of!(xm64player_s, fd) - 4usize];
    ["Offset of field: xm64player_s::first_ch"]
        [::core::mem::offset_of!(xm64player_s, first_ch) - 8usize];
    ["Offset of field: xm64player_s::playing"]
        [::core::mem::offset_of!(xm64player_s, playing) - 12usize];
    ["Offset of field: xm64player_s::stop_requested"]
        [::core::mem::offset_of!(xm64player_s, stop_requested) - 13usize];
    ["Offset of field: xm64player_s::looping"]
        [::core::mem::offset_of!(xm64player_s, looping) - 14usize];
    ["Offset of field: xm64player_s::seek"][::core::mem::offset_of!(xm64player_s, seek) - 16usize];
};
pub type xm64player_t = xm64player_s;
unsafe extern "C" {
    pub fn xm64player_open(player: *mut xm64player_t, fn_: *const ::core::ffi::c_char);
    pub fn xm64player_num_channels(player: *mut xm64player_t) -> ::core::ffi::c_int;
    pub fn xm64player_set_loop(player: *mut xm64player_t, loop_: bool);
    pub fn xm64player_play(player: *mut xm64player_t, first_ch: ::core::ffi::c_int);
    pub fn xm64player_stop(player: *mut xm64player_t);
    pub fn xm64player_tell(
        player: *mut xm64player_t,
        patidx: *mut ::core::ffi::c_int,
        row: *mut ::core::ffi::c_int,
        secs: *mut f32,
    );
    pub fn xm64player_seek(
        player: *mut xm64player_t,
        patidx: ::core::ffi::c_int,
        row: ::core::ffi::c_int,
        tick: ::core::ffi::c_int,
    );
    pub fn xm64player_set_vol(player: *mut xm64player_t, volume: f32);
    pub fn xm64player_set_effect_callback(
        player: *mut xm64player_t,
        cb: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void, arg2: u8, arg3: u8, arg4: u8),
        >,
        ctx: *mut ::core::ffi::c_void,
    );
    pub fn xm64player_close(player: *mut xm64player_t);
    pub fn xm64_set_extsampledir(dir: *const ::core::ffi::c_char);
}
