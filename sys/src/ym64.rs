/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug)]
pub struct ym64player_t {
    pub wave: crate::mixer::waveform_t,
    pub f: *mut crate::stdio::FILE,
    pub decoder: *mut ::core::ffi::c_void,
    pub start_off: ::core::ffi::c_int,
    pub ay: crate::ay8910::AY8910,
    pub regs: [u8; 16usize],
    pub nframes: u32,
    pub chipfreq: u32,
    pub playfreq: u16,
    pub curframe: ::core::ffi::c_int,
    pub first_ch: ::core::ffi::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ym64player_t"][::core::mem::size_of::<ym64player_t>() - 164usize];
    ["Alignment of ym64player_t"][::core::mem::align_of::<ym64player_t>() - 4usize];
    ["Offset of field: ym64player_t::wave"][::core::mem::offset_of!(ym64player_t, wave) - 0usize];
    ["Offset of field: ym64player_t::f"][::core::mem::offset_of!(ym64player_t, f) - 40usize];
    ["Offset of field: ym64player_t::decoder"]
        [::core::mem::offset_of!(ym64player_t, decoder) - 44usize];
    ["Offset of field: ym64player_t::start_off"]
        [::core::mem::offset_of!(ym64player_t, start_off) - 48usize];
    ["Offset of field: ym64player_t::ay"][::core::mem::offset_of!(ym64player_t, ay) - 52usize];
    ["Offset of field: ym64player_t::regs"][::core::mem::offset_of!(ym64player_t, regs) - 128usize];
    ["Offset of field: ym64player_t::nframes"]
        [::core::mem::offset_of!(ym64player_t, nframes) - 144usize];
    ["Offset of field: ym64player_t::chipfreq"]
        [::core::mem::offset_of!(ym64player_t, chipfreq) - 148usize];
    ["Offset of field: ym64player_t::playfreq"]
        [::core::mem::offset_of!(ym64player_t, playfreq) - 152usize];
    ["Offset of field: ym64player_t::curframe"]
        [::core::mem::offset_of!(ym64player_t, curframe) - 156usize];
    ["Offset of field: ym64player_t::first_ch"]
        [::core::mem::offset_of!(ym64player_t, first_ch) - 160usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ym64player_songinfo_t {
    pub name: [::core::ffi::c_char; 128usize],
    pub author: [::core::ffi::c_char; 128usize],
    pub comment: [::core::ffi::c_char; 128usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ym64player_songinfo_t"][::core::mem::size_of::<ym64player_songinfo_t>() - 384usize];
    ["Alignment of ym64player_songinfo_t"]
        [::core::mem::align_of::<ym64player_songinfo_t>() - 1usize];
    ["Offset of field: ym64player_songinfo_t::name"]
        [::core::mem::offset_of!(ym64player_songinfo_t, name) - 0usize];
    ["Offset of field: ym64player_songinfo_t::author"]
        [::core::mem::offset_of!(ym64player_songinfo_t, author) - 128usize];
    ["Offset of field: ym64player_songinfo_t::comment"]
        [::core::mem::offset_of!(ym64player_songinfo_t, comment) - 256usize];
};
unsafe extern "C" {
    pub fn ym64player_open(
        player: *mut ym64player_t,
        fn_: *const ::core::ffi::c_char,
        info: *mut ym64player_songinfo_t,
    );
    pub fn ym64player_num_channels(player: *mut ym64player_t) -> ::core::ffi::c_int;
    pub fn ym64player_play(player: *mut ym64player_t, first_ch: ::core::ffi::c_int);
    pub fn ym64player_duration(
        player: *mut ym64player_t,
        len: *mut ::core::ffi::c_int,
        secs: *mut f32,
    );
    pub fn ym64player_tell(player: *mut ym64player_t, pos: *mut ::core::ffi::c_int, secs: *mut f32);
    pub fn ym64player_seek(player: *mut ym64player_t, pos: ::core::ffi::c_int) -> bool;
    pub fn ym64player_stop(player: *mut ym64player_t);
    pub fn ym64player_close(player: *mut ym64player_t);
}
