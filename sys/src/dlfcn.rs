/* automatically generated by rust-bindgen 0.72.0 */

pub const RTLD_LAZY: u32 = 0;
pub const RTLD_NOW: u32 = 0;
pub const RTLD_GLOBAL: u32 = 1;
pub const RTLD_LOCAL: u32 = 0;
pub const RTLD_NODELETE: u32 = 2;
pub const RTLD_NOLOAD: u32 = 4;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Dl_info {
    pub dli_fname: *const ::core::ffi::c_char,
    pub dli_fbase: *mut ::core::ffi::c_void,
    pub dli_sname: *const ::core::ffi::c_char,
    pub dli_saddr: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Dl_info"][::core::mem::size_of::<Dl_info>() - 16usize];
    ["Alignment of Dl_info"][::core::mem::align_of::<Dl_info>() - 4usize];
    ["Offset of field: Dl_info::dli_fname"][::core::mem::offset_of!(Dl_info, dli_fname) - 0usize];
    ["Offset of field: Dl_info::dli_fbase"][::core::mem::offset_of!(Dl_info, dli_fbase) - 4usize];
    ["Offset of field: Dl_info::dli_sname"][::core::mem::offset_of!(Dl_info, dli_sname) - 8usize];
    ["Offset of field: Dl_info::dli_saddr"][::core::mem::offset_of!(Dl_info, dli_saddr) - 12usize];
};
unsafe extern "C" {
    pub fn dlopen(
        filename: *const ::core::ffi::c_char,
        mode: ::core::ffi::c_int,
    ) -> *mut ::core::ffi::c_void;
    pub fn dlsym(
        handle: *mut ::core::ffi::c_void,
        symbol: *const ::core::ffi::c_char,
    ) -> *mut ::core::ffi::c_void;
    pub fn dlclose(handle: *mut ::core::ffi::c_void) -> ::core::ffi::c_int;
    pub fn dladdr(addr: *const ::core::ffi::c_void, info: *mut Dl_info) -> ::core::ffi::c_int;
    pub fn dlerror() -> *mut ::core::ffi::c_char;
}
