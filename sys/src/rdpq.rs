/* automatically generated by rust-bindgen 0.72.0 */

pub const RDPQ_OVL_ID: u32 = 3221225472;
pub const RDPQ_CFG_AUTOSYNCPIPE: u32 = 1;
pub const RDPQ_CFG_AUTOSYNCLOAD: u32 = 2;
pub const RDPQ_CFG_AUTOSYNCTILE: u32 = 4;
pub const RDPQ_CFG_AUTOSCISSOR: u32 = 8;
pub const RDPQ_CFG_DEFAULT: u32 = 65535;
pub const AUTOSYNC_TILES: u32 = 255;
pub const AUTOSYNC_TMEMS: u32 = 65280;
pub const AUTOSYNC_PIPE: u32 = 65536;
pub const RDPQ_AUTOTMEM: u32 = 32768;
pub const RDPQ_CMD_NOOP: _bindgen_ty_1 = 0;
pub const RDPQ_CMD_SET_LOOKUP_ADDRESS: _bindgen_ty_1 = 1;
pub const RDPQ_CMD_FILL_RECTANGLE_EX: _bindgen_ty_1 = 2;
pub const RDPQ_CMD_CLEAR_ZBUFFER: _bindgen_ty_1 = 3;
pub const RDPQ_CMD_RESET_RENDER_MODE: _bindgen_ty_1 = 4;
pub const RDPQ_CMD_SET_COMBINE_MODE_2PASS: _bindgen_ty_1 = 5;
pub const RDPQ_CMD_PUSH_RENDER_MODE: _bindgen_ty_1 = 6;
pub const RDPQ_CMD_POP_RENDER_MODE: _bindgen_ty_1 = 7;
pub const RDPQ_CMD_TRI: _bindgen_ty_1 = 8;
pub const RDPQ_CMD_TRI_ZBUF: _bindgen_ty_1 = 9;
pub const RDPQ_CMD_TRI_TEX: _bindgen_ty_1 = 10;
pub const RDPQ_CMD_TRI_TEX_ZBUF: _bindgen_ty_1 = 11;
pub const RDPQ_CMD_TRI_SHADE: _bindgen_ty_1 = 12;
pub const RDPQ_CMD_TRI_SHADE_ZBUF: _bindgen_ty_1 = 13;
pub const RDPQ_CMD_TRI_SHADE_TEX: _bindgen_ty_1 = 14;
pub const RDPQ_CMD_TRI_SHADE_TEX_ZBUF: _bindgen_ty_1 = 15;
pub const RDPQ_CMD_TEXTURE_RECTANGLE_EX: _bindgen_ty_1 = 16;
pub const RDPQ_CMD_SET_DEBUG_MODE: _bindgen_ty_1 = 17;
pub const RDPQ_CMD_SET_SCISSOR_EX: _bindgen_ty_1 = 18;
pub const RDPQ_CMD_SET_PRIM_COLOR_COMPONENT: _bindgen_ty_1 = 19;
pub const RDPQ_CMD_MODIFY_OTHER_MODES: _bindgen_ty_1 = 20;
pub const RDPQ_CMD_SET_FILL_COLOR_32: _bindgen_ty_1 = 22;
pub const RDPQ_CMD_SET_BLENDING_MODE: _bindgen_ty_1 = 24;
pub const RDPQ_CMD_SET_FOG_MODE: _bindgen_ty_1 = 25;
pub const RDPQ_CMD_SET_COMBINE_MODE_1PASS: _bindgen_ty_1 = 27;
pub const RDPQ_CMD_AUTOTMEM_SET_ADDR: _bindgen_ty_1 = 28;
pub const RDPQ_CMD_AUTOTMEM_SET_TILE: _bindgen_ty_1 = 29;
pub const RDPQ_CMD_TRIANGLE: _bindgen_ty_1 = 30;
pub const RDPQ_CMD_TRIANGLE_DATA: _bindgen_ty_1 = 31;
pub const RDPQ_CMD_TEXTURE_RECTANGLE: _bindgen_ty_1 = 36;
pub const RDPQ_CMD_TEXTURE_RECTANGLE_FLIP: _bindgen_ty_1 = 37;
pub const RDPQ_CMD_SYNC_LOAD: _bindgen_ty_1 = 38;
pub const RDPQ_CMD_SYNC_PIPE: _bindgen_ty_1 = 39;
pub const RDPQ_CMD_SYNC_TILE: _bindgen_ty_1 = 40;
pub const RDPQ_CMD_SYNC_FULL: _bindgen_ty_1 = 41;
pub const RDPQ_CMD_SET_KEY_GB: _bindgen_ty_1 = 42;
pub const RDPQ_CMD_SET_KEY_R: _bindgen_ty_1 = 43;
pub const RDPQ_CMD_SET_CONVERT: _bindgen_ty_1 = 44;
pub const RDPQ_CMD_SET_SCISSOR: _bindgen_ty_1 = 45;
pub const RDPQ_CMD_SET_PRIM_DEPTH: _bindgen_ty_1 = 46;
pub const RDPQ_CMD_SET_OTHER_MODES: _bindgen_ty_1 = 47;
pub const RDPQ_CMD_LOAD_TLUT: _bindgen_ty_1 = 48;
pub const RDPQ_CMD_DEBUG: _bindgen_ty_1 = 49;
pub const RDPQ_CMD_SET_TILE_SIZE: _bindgen_ty_1 = 50;
pub const RDPQ_CMD_LOAD_BLOCK: _bindgen_ty_1 = 51;
pub const RDPQ_CMD_LOAD_TILE: _bindgen_ty_1 = 52;
pub const RDPQ_CMD_SET_TILE: _bindgen_ty_1 = 53;
pub const RDPQ_CMD_FILL_RECTANGLE: _bindgen_ty_1 = 54;
pub const RDPQ_CMD_SET_FILL_COLOR: _bindgen_ty_1 = 55;
pub const RDPQ_CMD_SET_FOG_COLOR: _bindgen_ty_1 = 56;
pub const RDPQ_CMD_SET_BLEND_COLOR: _bindgen_ty_1 = 57;
pub const RDPQ_CMD_SET_PRIM_COLOR: _bindgen_ty_1 = 58;
pub const RDPQ_CMD_SET_ENV_COLOR: _bindgen_ty_1 = 59;
pub const RDPQ_CMD_SET_COMBINE_MODE_RAW: _bindgen_ty_1 = 60;
pub const RDPQ_CMD_SET_TEXTURE_IMAGE: _bindgen_ty_1 = 61;
pub const RDPQ_CMD_SET_Z_IMAGE: _bindgen_ty_1 = 62;
pub const RDPQ_CMD_SET_COLOR_IMAGE: _bindgen_ty_1 = 63;
pub type _bindgen_ty_1 = ::core::ffi::c_uint;
pub const rdpq_tile_t_TILE0: rdpq_tile_t = 0;
pub const rdpq_tile_t_TILE1: rdpq_tile_t = 1;
pub const rdpq_tile_t_TILE2: rdpq_tile_t = 2;
pub const rdpq_tile_t_TILE3: rdpq_tile_t = 3;
pub const rdpq_tile_t_TILE4: rdpq_tile_t = 4;
pub const rdpq_tile_t_TILE5: rdpq_tile_t = 5;
pub const rdpq_tile_t_TILE6: rdpq_tile_t = 6;
pub const rdpq_tile_t_TILE7: rdpq_tile_t = 7;
pub type rdpq_tile_t = ::core::ffi::c_uint;
#[repr(C)]
#[derive(Default, Debug, Copy, Clone, PartialEq, PartialOrd, Eq, Ord, Hash)]
pub struct rdpq_tileparms_t {
    pub palette: u8,
    pub s: rdpq_tileparms_t__bindgen_ty_1,
    pub t: rdpq_tileparms_t__bindgen_ty_1,
}
#[repr(C)]
#[derive(Default, Debug, Copy, Clone, PartialEq, PartialOrd, Eq, Ord, Hash)]
pub struct rdpq_tileparms_t__bindgen_ty_1 {
    pub clamp: bool,
    pub mirror: bool,
    pub mask: u8,
    pub shift: i8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_tileparms_t__bindgen_ty_1"]
        [::core::mem::size_of::<rdpq_tileparms_t__bindgen_ty_1>() - 4usize];
    ["Alignment of rdpq_tileparms_t__bindgen_ty_1"]
        [::core::mem::align_of::<rdpq_tileparms_t__bindgen_ty_1>() - 1usize];
    ["Offset of field: rdpq_tileparms_t__bindgen_ty_1::clamp"]
        [::core::mem::offset_of!(rdpq_tileparms_t__bindgen_ty_1, clamp) - 0usize];
    ["Offset of field: rdpq_tileparms_t__bindgen_ty_1::mirror"]
        [::core::mem::offset_of!(rdpq_tileparms_t__bindgen_ty_1, mirror) - 1usize];
    ["Offset of field: rdpq_tileparms_t__bindgen_ty_1::mask"]
        [::core::mem::offset_of!(rdpq_tileparms_t__bindgen_ty_1, mask) - 2usize];
    ["Offset of field: rdpq_tileparms_t__bindgen_ty_1::shift"]
        [::core::mem::offset_of!(rdpq_tileparms_t__bindgen_ty_1, shift) - 3usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_tileparms_t"][::core::mem::size_of::<rdpq_tileparms_t>() - 9usize];
    ["Alignment of rdpq_tileparms_t"][::core::mem::align_of::<rdpq_tileparms_t>() - 1usize];
    ["Offset of field: rdpq_tileparms_t::palette"]
        [::core::mem::offset_of!(rdpq_tileparms_t, palette) - 0usize];
    ["Offset of field: rdpq_tileparms_t::s"][::core::mem::offset_of!(rdpq_tileparms_t, s) - 1usize];
    ["Offset of field: rdpq_tileparms_t::t"][::core::mem::offset_of!(rdpq_tileparms_t, t) - 5usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rspq_block_s {
    _unused: [u8; 0],
}
pub type rspq_block_t = rspq_block_s;
unsafe extern "C" {
    pub fn __rdpq_set_scissor(arg1: u32, arg2: u32);
    pub fn rdpq_init();
    pub fn rdpq_close();
    pub fn rdpq_config_set(cfg: u32) -> u32;
    pub fn rdpq_config_enable(cfg_enable_bits: u32) -> u32;
    pub fn rdpq_config_disable(cfg_disable_bits: u32) -> u32;
    pub fn rdpq_set_tile_autotmem(tmem_bytes: i16);
    pub fn __rdpq_write8_syncchange(cmd_id: u32, arg0: u32, arg1: u32, autosync: u32);
    pub fn __rdpq_write8(cmd_id: u32, arg0: u32, arg1: u32);
    pub fn __rdpq_write8_syncchangeuse(
        cmd_id: u32,
        arg0: u32,
        arg1: u32,
        autosync_c: u32,
        autosync_u: u32,
    );
    pub fn __rdpq_fixup_write8_syncchange(cmd_id: u32, w0: u32, w1: u32, autosync: u32);
    pub fn __rdpq_set_fill_color(color: u32);
    pub fn rdpq_set_color_image(surface: *const crate::surface::surface_t);
    pub fn rdpq_set_z_image(surface: *const crate::surface::surface_t);
    pub fn rdpq_set_texture_image(surface: *const crate::surface::surface_t);
    pub fn __rdpq_set_color_image(w0: u32, w1: u32, sw0: u32, sw1: u32);
    pub fn rdpq_sync_pipe();
    pub fn rdpq_sync_tile();
    pub fn rdpq_sync_load();
    pub fn rdpq_sync_full(
        callback: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void)>,
        arg: *mut ::core::ffi::c_void,
    );
    pub fn __rdpq_set_other_modes(w0: u32, w1: u32);
    pub fn __rdpq_change_other_modes(w0: u32, w1: u32, w2: u32);
    pub fn rdpq_get_other_modes_raw() -> u64;
    pub fn rdpq_get_combiner_raw() -> u64;
    pub fn rdpq_fence();
    pub fn rdpq_exec(buffer: *mut ::core::ffi::c_void, size: ::core::ffi::c_int);
    pub fn rdpq_call_deferred(
        func: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void)>,
        arg: *mut ::core::ffi::c_void,
    );
    pub static mut rspq_block: *mut rspq_block_t;
    pub fn __rdpq_block_reserve(arg1: ::core::ffi::c_int);
}
