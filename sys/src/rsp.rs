/* automatically generated by rust-bindgen 0.72.0 */

pub const SP_STATUS_HALTED: u32 = 1;
pub const SP_STATUS_BROKE: u32 = 2;
pub const SP_STATUS_DMA_BUSY: u32 = 4;
pub const SP_STATUS_DMA_FULL: u32 = 8;
pub const SP_STATUS_IO_BUSY: u32 = 16;
pub const SP_STATUS_SSTEP: u32 = 32;
pub const SP_STATUS_INTERRUPT_ON_BREAK: u32 = 64;
pub const SP_STATUS_SIG0: u32 = 128;
pub const SP_STATUS_SIG1: u32 = 256;
pub const SP_STATUS_SIG2: u32 = 512;
pub const SP_STATUS_SIG3: u32 = 1024;
pub const SP_STATUS_SIG4: u32 = 2048;
pub const SP_STATUS_SIG5: u32 = 4096;
pub const SP_STATUS_SIG6: u32 = 8192;
pub const SP_STATUS_SIG7: u32 = 16384;
pub const SP_WSTATUS_CLEAR_HALT: u32 = 1;
pub const SP_WSTATUS_SET_HALT: u32 = 2;
pub const SP_WSTATUS_CLEAR_BROKE: u32 = 4;
pub const SP_WSTATUS_CLEAR_INTR: u32 = 8;
pub const SP_WSTATUS_SET_INTR: u32 = 16;
pub const SP_WSTATUS_CLEAR_SSTEP: u32 = 32;
pub const SP_WSTATUS_SET_SSTEP: u32 = 64;
pub const SP_WSTATUS_CLEAR_INTR_BREAK: u32 = 128;
pub const SP_WSTATUS_SET_INTR_BREAK: u32 = 256;
pub const SP_WSTATUS_CLEAR_SIG0: u32 = 512;
pub const SP_WSTATUS_SET_SIG0: u32 = 1024;
pub const SP_WSTATUS_CLEAR_SIG1: u32 = 2048;
pub const SP_WSTATUS_SET_SIG1: u32 = 4096;
pub const SP_WSTATUS_CLEAR_SIG2: u32 = 8192;
pub const SP_WSTATUS_SET_SIG2: u32 = 16384;
pub const SP_WSTATUS_CLEAR_SIG3: u32 = 32768;
pub const SP_WSTATUS_SET_SIG3: u32 = 65536;
pub const SP_WSTATUS_CLEAR_SIG4: u32 = 131072;
pub const SP_WSTATUS_SET_SIG4: u32 = 262144;
pub const SP_WSTATUS_CLEAR_SIG5: u32 = 524288;
pub const SP_WSTATUS_SET_SIG5: u32 = 1048576;
pub const SP_WSTATUS_CLEAR_SIG6: u32 = 2097152;
pub const SP_WSTATUS_SET_SIG6: u32 = 4194304;
pub const SP_WSTATUS_CLEAR_SIG7: u32 = 8388608;
pub const SP_WSTATUS_SET_SIG7: u32 = 16777216;
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct rsp_snapshot_t {
    pub gpr: [u32; 32usize],
    pub vpr: [[u16; 8usize]; 32usize],
    pub vaccum: [[u16; 8usize]; 3usize],
    pub cop0: [u32; 16usize],
    pub cop2: [u32; 3usize],
    pub pc: u32,
    pub dmem: [u8; 4096usize],
    pub imem: [u8; 4096usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rsp_snapshot_t"][::core::mem::size_of::<rsp_snapshot_t>() - 8960usize];
    ["Alignment of rsp_snapshot_t"][::core::mem::align_of::<rsp_snapshot_t>() - 8usize];
    ["Offset of field: rsp_snapshot_t::gpr"][::core::mem::offset_of!(rsp_snapshot_t, gpr) - 0usize];
    ["Offset of field: rsp_snapshot_t::vpr"]
        [::core::mem::offset_of!(rsp_snapshot_t, vpr) - 128usize];
    ["Offset of field: rsp_snapshot_t::vaccum"]
        [::core::mem::offset_of!(rsp_snapshot_t, vaccum) - 640usize];
    ["Offset of field: rsp_snapshot_t::cop0"]
        [::core::mem::offset_of!(rsp_snapshot_t, cop0) - 688usize];
    ["Offset of field: rsp_snapshot_t::cop2"]
        [::core::mem::offset_of!(rsp_snapshot_t, cop2) - 752usize];
    ["Offset of field: rsp_snapshot_t::pc"][::core::mem::offset_of!(rsp_snapshot_t, pc) - 764usize];
    ["Offset of field: rsp_snapshot_t::dmem"]
        [::core::mem::offset_of!(rsp_snapshot_t, dmem) - 768usize];
    ["Offset of field: rsp_snapshot_t::imem"]
        [::core::mem::offset_of!(rsp_snapshot_t, imem) - 4864usize];
};
#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct rsp_ucode_t {
    pub code: *mut u8,
    pub code_end: *mut ::core::ffi::c_void,
    pub data: *mut u8,
    pub data_end: *mut ::core::ffi::c_void,
    pub meta: *mut u8,
    pub meta_end: *mut ::core::ffi::c_void,
    pub name: *const ::core::ffi::c_char,
    pub start_pc: u32,
    pub crash_handler: ::core::option::Option<unsafe extern "C" fn(state: *mut rsp_snapshot_t)>,
    pub assert_handler:
        ::core::option::Option<unsafe extern "C" fn(state: *mut rsp_snapshot_t, assert_code: u16)>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rsp_ucode_t"][::core::mem::size_of::<rsp_ucode_t>() - 40usize];
    ["Alignment of rsp_ucode_t"][::core::mem::align_of::<rsp_ucode_t>() - 4usize];
    ["Offset of field: rsp_ucode_t::code"][::core::mem::offset_of!(rsp_ucode_t, code) - 0usize];
    ["Offset of field: rsp_ucode_t::code_end"]
        [::core::mem::offset_of!(rsp_ucode_t, code_end) - 4usize];
    ["Offset of field: rsp_ucode_t::data"][::core::mem::offset_of!(rsp_ucode_t, data) - 8usize];
    ["Offset of field: rsp_ucode_t::data_end"]
        [::core::mem::offset_of!(rsp_ucode_t, data_end) - 12usize];
    ["Offset of field: rsp_ucode_t::meta"][::core::mem::offset_of!(rsp_ucode_t, meta) - 16usize];
    ["Offset of field: rsp_ucode_t::meta_end"]
        [::core::mem::offset_of!(rsp_ucode_t, meta_end) - 20usize];
    ["Offset of field: rsp_ucode_t::name"][::core::mem::offset_of!(rsp_ucode_t, name) - 24usize];
    ["Offset of field: rsp_ucode_t::start_pc"]
        [::core::mem::offset_of!(rsp_ucode_t, start_pc) - 28usize];
    ["Offset of field: rsp_ucode_t::crash_handler"]
        [::core::mem::offset_of!(rsp_ucode_t, crash_handler) - 32usize];
    ["Offset of field: rsp_ucode_t::assert_handler"]
        [::core::mem::offset_of!(rsp_ucode_t, assert_handler) - 36usize];
};
unsafe extern "C" {
    pub fn rsp_init();
    pub fn rsp_load(ucode: *mut rsp_ucode_t);
    pub fn rsp_run();
    pub fn __rsp_run_async(status_flags: u32);
    pub fn rsp_wait();
    pub fn rsp_load_code(
        code: *mut ::core::ffi::c_void,
        size: ::core::ffi::c_ulong,
        imem_offset: ::core::ffi::c_uint,
    );
    pub fn rsp_load_data(
        data: *mut ::core::ffi::c_void,
        size: ::core::ffi::c_ulong,
        dmem_offset: ::core::ffi::c_uint,
    );
    pub fn rsp_read_code(
        code: *mut ::core::ffi::c_void,
        size: ::core::ffi::c_ulong,
        imem_offset: ::core::ffi::c_uint,
    );
    pub fn rsp_read_data(
        data: *mut ::core::ffi::c_void,
        size: ::core::ffi::c_ulong,
        dmem_offset: ::core::ffi::c_uint,
    );
    pub fn __rsp_crash(
        file: *const ::core::ffi::c_char,
        line: ::core::ffi::c_int,
        func: *const ::core::ffi::c_char,
        msg: *const ::core::ffi::c_char,
        ...
    ) -> !;
    pub fn __rsp_check_assert(
        file: *const ::core::ffi::c_char,
        line: ::core::ffi::c_int,
        func: *const ::core::ffi::c_char,
    );
}
