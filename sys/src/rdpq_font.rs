/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rdpq_font_s {
    _unused: [u8; 0],
}
pub type rdpq_font_t = rdpq_font_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rdpq_paragraph_char_s {
    _unused: [u8; 0],
}
pub type rdpq_paragraph_char_t = rdpq_paragraph_char_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rdpq_font_gmetrics_t {
    pub xadvance: f32,
    pub x0: i8,
    pub y0: i8,
    pub x1: i8,
    pub y1: i8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_font_gmetrics_t"][::core::mem::size_of::<rdpq_font_gmetrics_t>() - 8usize];
    ["Alignment of rdpq_font_gmetrics_t"][::core::mem::align_of::<rdpq_font_gmetrics_t>() - 4usize];
    ["Offset of field: rdpq_font_gmetrics_t::xadvance"]
        [::core::mem::offset_of!(rdpq_font_gmetrics_t, xadvance) - 0usize];
    ["Offset of field: rdpq_font_gmetrics_t::x0"]
        [::core::mem::offset_of!(rdpq_font_gmetrics_t, x0) - 4usize];
    ["Offset of field: rdpq_font_gmetrics_t::y0"]
        [::core::mem::offset_of!(rdpq_font_gmetrics_t, y0) - 5usize];
    ["Offset of field: rdpq_font_gmetrics_t::x1"]
        [::core::mem::offset_of!(rdpq_font_gmetrics_t, x1) - 6usize];
    ["Offset of field: rdpq_font_gmetrics_t::y1"]
        [::core::mem::offset_of!(rdpq_font_gmetrics_t, y1) - 7usize];
};
pub const rdpq_font_builtin_t_FONT_BUILTIN_DEBUG_MONO: rdpq_font_builtin_t = 1;
pub const rdpq_font_builtin_t_FONT_BUILTIN_DEBUG_VAR: rdpq_font_builtin_t = 2;
pub type rdpq_font_builtin_t = ::core::ffi::c_uint;
#[repr(C)]
pub struct rdpq_fontstyle_s {
    pub color: crate::graphics::color_t,
    pub outline_color: crate::graphics::color_t,
    pub custom: ::core::option::Option<unsafe extern "C" fn(arg: *mut ::core::ffi::c_void)>,
    pub custom_arg: *mut ::core::ffi::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_fontstyle_s"][::core::mem::size_of::<rdpq_fontstyle_s>() - 16usize];
    ["Alignment of rdpq_fontstyle_s"][::core::mem::align_of::<rdpq_fontstyle_s>() - 4usize];
    ["Offset of field: rdpq_fontstyle_s::color"]
        [::core::mem::offset_of!(rdpq_fontstyle_s, color) - 0usize];
    ["Offset of field: rdpq_fontstyle_s::outline_color"]
        [::core::mem::offset_of!(rdpq_fontstyle_s, outline_color) - 4usize];
    ["Offset of field: rdpq_fontstyle_s::custom"]
        [::core::mem::offset_of!(rdpq_fontstyle_s, custom) - 8usize];
    ["Offset of field: rdpq_fontstyle_s::custom_arg"]
        [::core::mem::offset_of!(rdpq_fontstyle_s, custom_arg) - 12usize];
};
pub type rdpq_fontstyle_t = rdpq_fontstyle_s;
unsafe extern "C" {
    pub fn __rdpq_font_load_builtin_1() -> *mut rdpq_font_t;
    pub fn __rdpq_font_load_builtin_2() -> *mut rdpq_font_t;
    pub fn rdpq_font_load(fn_: *const ::core::ffi::c_char) -> *mut rdpq_font_t;
    pub fn rdpq_font_load_buf(
        buf: *mut ::core::ffi::c_void,
        sz: ::core::ffi::c_int,
    ) -> *mut rdpq_font_t;
    pub fn rdpq_font_free(fnt: *mut rdpq_font_t);
    pub fn rdpq_font_style(font: *mut rdpq_font_t, style_id: u8, style: *const rdpq_fontstyle_t);
    pub fn rdpq_font_render_paragraph(
        fnt: *const rdpq_font_t,
        chars: *const rdpq_paragraph_char_t,
        x0: f32,
        y0: f32,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_font_get_glyph_ranges(
        fnt: *const rdpq_font_t,
        idx: ::core::ffi::c_int,
        start: *mut u32,
        end: *mut u32,
        sparse: *mut bool,
    ) -> bool;
    pub fn rdpq_font_get_glyph_index(fnt: *const rdpq_font_t, codepoint: u32)
    -> ::core::ffi::c_int;
    pub fn rdpq_font_get_glyph_metrics(
        fnt: *const rdpq_font_t,
        codepoint: u32,
        metrics: *mut rdpq_font_gmetrics_t,
    ) -> bool;
}
