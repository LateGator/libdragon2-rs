/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct bb_ticket_bundle_t {
    pub ticket: *mut ::core::ffi::c_void,
    pub ticket_certs: [*mut ::core::ffi::c_void; 5usize],
    pub ticket_cmd: [*mut ::core::ffi::c_void; 5usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of bb_ticket_bundle_t"][::core::mem::size_of::<bb_ticket_bundle_t>() - 44usize];
    ["Alignment of bb_ticket_bundle_t"][::core::mem::align_of::<bb_ticket_bundle_t>() - 4usize];
    ["Offset of field: bb_ticket_bundle_t::ticket"]
        [::core::mem::offset_of!(bb_ticket_bundle_t, ticket) - 0usize];
    ["Offset of field: bb_ticket_bundle_t::ticket_certs"]
        [::core::mem::offset_of!(bb_ticket_bundle_t, ticket_certs) - 4usize];
    ["Offset of field: bb_ticket_bundle_t::ticket_cmd"]
        [::core::mem::offset_of!(bb_ticket_bundle_t, ticket_cmd) - 24usize];
};
unsafe extern "C" {
    pub fn skc_get_id(id: *mut u32) -> ::core::ffi::c_int;
    pub fn skc_launch(address: *mut ::core::ffi::c_void) -> ::core::ffi::c_int;
    pub fn skc_launch_setup(
        bundle: *mut bb_ticket_bundle_t,
        crls: *mut ::core::ffi::c_void,
        recrypt_list: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
    pub fn skc_exit() -> !;
    pub fn skc_keep_alive();
}
