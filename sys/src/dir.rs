/* automatically generated by rust-bindgen 0.72.0 */

pub const DT_REG: u32 = 1;
pub const DT_DIR: u32 = 2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dir_t {
    pub d_name: [::core::ffi::c_char; 256usize],
    pub d_type: ::core::ffi::c_int,
    pub d_size: i64,
    pub d_cookie: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of dir_t"][::core::mem::size_of::<dir_t>() - 280usize];
    ["Alignment of dir_t"][::core::mem::align_of::<dir_t>() - 8usize];
    ["Offset of field: dir_t::d_name"][::core::mem::offset_of!(dir_t, d_name) - 0usize];
    ["Offset of field: dir_t::d_type"][::core::mem::offset_of!(dir_t, d_type) - 256usize];
    ["Offset of field: dir_t::d_size"][::core::mem::offset_of!(dir_t, d_size) - 264usize];
    ["Offset of field: dir_t::d_cookie"][::core::mem::offset_of!(dir_t, d_cookie) - 272usize];
};
pub const DIR_WALK_ABORT: _bindgen_ty_1 = -2;
pub const DIR_WALK_ERROR: _bindgen_ty_1 = -1;
pub const DIR_WALK_CONTINUE: _bindgen_ty_1 = 0;
pub const DIR_WALK_SKIPDIR: _bindgen_ty_1 = 1;
pub const DIR_WALK_GOUP: _bindgen_ty_1 = 2;
pub type _bindgen_ty_1 = ::core::ffi::c_int;
pub type dir_walk_callback_t = ::core::option::Option<
    unsafe extern "C" fn(
        fn_: *const ::core::ffi::c_char,
        dir: *mut dir_t,
        data: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int,
>;
unsafe extern "C" {
    pub fn dir_findfirst(path: *const ::core::ffi::c_char, dir: *mut dir_t) -> ::core::ffi::c_int;
    pub fn dir_findnext(path: *const ::core::ffi::c_char, dir: *mut dir_t) -> ::core::ffi::c_int;
    pub fn dir_walk(
        path: *const ::core::ffi::c_char,
        cb: dir_walk_callback_t,
        data: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
    pub fn dir_fnmatch(
        pattern: *const ::core::ffi::c_char,
        fullpath: *const ::core::ffi::c_char,
    ) -> bool;
    pub fn dir_glob(
        pattern: *const ::core::ffi::c_char,
        path: *const ::core::ffi::c_char,
        cb: dir_walk_callback_t,
        data: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
}
