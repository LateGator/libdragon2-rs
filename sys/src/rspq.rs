/* automatically generated by rust-bindgen 0.72.0 */

pub const RSPQ_MAX_COMMAND_SIZE: u32 = 62;
pub const RSPQ_MAX_SHORT_COMMAND_SIZE: u32 = 16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rspq_block_s {
    _unused: [u8; 0],
}
pub type rspq_block_t = rspq_block_s;
pub type rspq_syncpoint_t = ::core::ffi::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rspq_write_t {
    pub first_word: u32,
    pub pointer: *mut u32,
    pub first: *mut u32,
    pub is_first: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rspq_write_t"][::core::mem::size_of::<rspq_write_t>() - 16usize];
    ["Alignment of rspq_write_t"][::core::mem::align_of::<rspq_write_t>() - 4usize];
    ["Offset of field: rspq_write_t::first_word"]
        [::core::mem::offset_of!(rspq_write_t, first_word) - 0usize];
    ["Offset of field: rspq_write_t::pointer"]
        [::core::mem::offset_of!(rspq_write_t, pointer) - 4usize];
    ["Offset of field: rspq_write_t::first"][::core::mem::offset_of!(rspq_write_t, first) - 8usize];
    ["Offset of field: rspq_write_t::is_first"]
        [::core::mem::offset_of!(rspq_write_t, is_first) - 12usize];
};
unsafe extern "C" {
    pub fn rspq_init();
    pub fn rspq_close();
    pub fn rspq_overlay_register(overlay_ucode: *mut crate::rsp::rsp_ucode_t) -> u32;
    pub fn rspq_overlay_register_static(
        overlay_ucode: *mut crate::rsp::rsp_ucode_t,
        overlay_id: u32,
    );
    pub fn rspq_overlay_unregister(overlay_id: u32);
    pub fn rspq_overlay_get_state(
        overlay_ucode: *mut crate::rsp::rsp_ucode_t,
    ) -> *mut ::core::ffi::c_void;
    pub static mut rspq_cur_pointer: *mut u32;
    pub static mut rspq_cur_sentinel: *mut u32;
    pub fn rspq_next_buffer();
    pub fn rspq_flush();
    pub fn rspq_wait();
    pub fn rspq_syncpoint_new() -> rspq_syncpoint_t;
    pub fn rspq_syncpoint_new_cb(
        func: ::core::option::Option<unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void)>,
        arg: *mut ::core::ffi::c_void,
    ) -> rspq_syncpoint_t;
    pub fn rspq_syncpoint_check(sync_id: rspq_syncpoint_t) -> bool;
    pub fn rspq_syncpoint_wait(sync_id: rspq_syncpoint_t);
    pub fn rspq_block_begin();
    pub fn rspq_block_end() -> *mut rspq_block_t;
    pub fn rspq_block_run(block: *mut rspq_block_t);
    pub fn rspq_block_free(block: *mut rspq_block_t);
    pub fn rspq_highpri_begin();
    pub fn rspq_highpri_end();
    pub fn rspq_highpri_sync();
    pub fn rspq_noop();
    pub fn rspq_dma_to_rdram(
        rdram_addr: *mut ::core::ffi::c_void,
        dmem_addr: u32,
        len: u32,
        is_async: bool,
    );
    pub fn rspq_dma_to_dmem(
        dmem_addr: u32,
        rdram_addr: *mut ::core::ffi::c_void,
        len: u32,
        is_async: bool,
    );
    pub fn rspq_signal(signal: u32);
}
