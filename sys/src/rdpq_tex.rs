/* automatically generated by rust-bindgen 0.72.0 */

pub const MIRROR_REPEAT: u32 = 1;
pub const MIRROR_NONE: u32 = 0;
pub const REPEAT_INFINITE: u32 = 2048;
#[repr(C)]
#[derive(Default, Debug, Copy, Clone, PartialEq, PartialOrd)]
pub struct rdpq_texparms_s {
    pub tmem_addr: ::core::ffi::c_int,
    pub palette: ::core::ffi::c_int,
    pub s: rdpq_texparms_s__bindgen_ty_1,
    pub t: rdpq_texparms_s__bindgen_ty_1,
}
#[repr(C)]
#[derive(Default, Debug, Copy, Clone, PartialEq, PartialOrd)]
pub struct rdpq_texparms_s__bindgen_ty_1 {
    pub translate: f32,
    pub scale_log: ::core::ffi::c_int,
    pub repeats: f32,
    pub mirror: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_texparms_s__bindgen_ty_1"]
        [::core::mem::size_of::<rdpq_texparms_s__bindgen_ty_1>() - 16usize];
    ["Alignment of rdpq_texparms_s__bindgen_ty_1"]
        [::core::mem::align_of::<rdpq_texparms_s__bindgen_ty_1>() - 4usize];
    ["Offset of field: rdpq_texparms_s__bindgen_ty_1::translate"]
        [::core::mem::offset_of!(rdpq_texparms_s__bindgen_ty_1, translate) - 0usize];
    ["Offset of field: rdpq_texparms_s__bindgen_ty_1::scale_log"]
        [::core::mem::offset_of!(rdpq_texparms_s__bindgen_ty_1, scale_log) - 4usize];
    ["Offset of field: rdpq_texparms_s__bindgen_ty_1::repeats"]
        [::core::mem::offset_of!(rdpq_texparms_s__bindgen_ty_1, repeats) - 8usize];
    ["Offset of field: rdpq_texparms_s__bindgen_ty_1::mirror"]
        [::core::mem::offset_of!(rdpq_texparms_s__bindgen_ty_1, mirror) - 12usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_texparms_s"][::core::mem::size_of::<rdpq_texparms_s>() - 40usize];
    ["Alignment of rdpq_texparms_s"][::core::mem::align_of::<rdpq_texparms_s>() - 4usize];
    ["Offset of field: rdpq_texparms_s::tmem_addr"]
        [::core::mem::offset_of!(rdpq_texparms_s, tmem_addr) - 0usize];
    ["Offset of field: rdpq_texparms_s::palette"]
        [::core::mem::offset_of!(rdpq_texparms_s, palette) - 4usize];
    ["Offset of field: rdpq_texparms_s::s"][::core::mem::offset_of!(rdpq_texparms_s, s) - 8usize];
    ["Offset of field: rdpq_texparms_s::t"][::core::mem::offset_of!(rdpq_texparms_s, t) - 24usize];
};
pub type rdpq_texparms_t = rdpq_texparms_s;
pub const tex_load_mode_TEX_LOAD_UNKNOWN: tex_load_mode = 0;
pub const tex_load_mode_TEX_LOAD_TILE: tex_load_mode = 1;
pub const tex_load_mode_TEX_LOAD_BLOCK: tex_load_mode = 2;
pub type tex_load_mode = ::core::ffi::c_uint;
#[repr(C)]
pub struct tex_loader_s {
    pub tex: *const crate::surface::surface_t,
    pub fmt: crate::surface::tex_format_t,
    pub tile: crate::rdpq::rdpq_tile_t,
    pub texparms: *const rdpq_texparms_t,
    pub tileparms: crate::rdpq::rdpq_tileparms_t,
    pub rect: tex_loader_s__bindgen_ty_1,
    pub tmem_addr: ::core::ffi::c_int,
    pub load_mode: tex_load_mode,
    pub load_block: ::core::option::Option<
        unsafe extern "C" fn(
            tload: *mut tex_loader_s,
            s0: ::core::ffi::c_int,
            t0: ::core::ffi::c_int,
            s1: ::core::ffi::c_int,
            t1: ::core::ffi::c_int,
        ),
    >,
    pub load_tile: ::core::option::Option<
        unsafe extern "C" fn(
            tload: *mut tex_loader_s,
            s0: ::core::ffi::c_int,
            t0: ::core::ffi::c_int,
            s1: ::core::ffi::c_int,
            t1: ::core::ffi::c_int,
        ),
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tex_loader_s__bindgen_ty_1 {
    pub width: ::core::ffi::c_int,
    pub height: ::core::ffi::c_int,
    pub num_texels: ::core::ffi::c_int,
    pub tmem_pitch: ::core::ffi::c_int,
    pub block_max_lines: ::core::ffi::c_int,
    pub can_load_block: bool,
    pub s0fx: ::core::ffi::c_int,
    pub t0fx: ::core::ffi::c_int,
    pub s1fx: ::core::ffi::c_int,
    pub t1fx: ::core::ffi::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tex_loader_s__bindgen_ty_1"]
        [::core::mem::size_of::<tex_loader_s__bindgen_ty_1>() - 40usize];
    ["Alignment of tex_loader_s__bindgen_ty_1"]
        [::core::mem::align_of::<tex_loader_s__bindgen_ty_1>() - 4usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::width"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, width) - 0usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::height"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, height) - 4usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::num_texels"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, num_texels) - 8usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::tmem_pitch"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, tmem_pitch) - 12usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::block_max_lines"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, block_max_lines) - 16usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::can_load_block"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, can_load_block) - 20usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::s0fx"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, s0fx) - 24usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::t0fx"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, t0fx) - 28usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::s1fx"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, s1fx) - 32usize];
    ["Offset of field: tex_loader_s__bindgen_ty_1::t1fx"]
        [::core::mem::offset_of!(tex_loader_s__bindgen_ty_1, t1fx) - 36usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tex_loader_s"][::core::mem::size_of::<tex_loader_s>() - 84usize];
    ["Alignment of tex_loader_s"][::core::mem::align_of::<tex_loader_s>() - 4usize];
    ["Offset of field: tex_loader_s::tex"][::core::mem::offset_of!(tex_loader_s, tex) - 0usize];
    ["Offset of field: tex_loader_s::fmt"][::core::mem::offset_of!(tex_loader_s, fmt) - 4usize];
    ["Offset of field: tex_loader_s::tile"][::core::mem::offset_of!(tex_loader_s, tile) - 8usize];
    ["Offset of field: tex_loader_s::texparms"]
        [::core::mem::offset_of!(tex_loader_s, texparms) - 12usize];
    ["Offset of field: tex_loader_s::tileparms"]
        [::core::mem::offset_of!(tex_loader_s, tileparms) - 16usize];
    ["Offset of field: tex_loader_s::rect"][::core::mem::offset_of!(tex_loader_s, rect) - 28usize];
    ["Offset of field: tex_loader_s::tmem_addr"]
        [::core::mem::offset_of!(tex_loader_s, tmem_addr) - 68usize];
    ["Offset of field: tex_loader_s::load_mode"]
        [::core::mem::offset_of!(tex_loader_s, load_mode) - 72usize];
    ["Offset of field: tex_loader_s::load_block"]
        [::core::mem::offset_of!(tex_loader_s, load_block) - 76usize];
    ["Offset of field: tex_loader_s::load_tile"]
        [::core::mem::offset_of!(tex_loader_s, load_tile) - 80usize];
};
pub type tex_loader_t = tex_loader_s;
#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct rdpq_blitparms_s {
    pub tile: crate::rdpq::rdpq_tile_t,
    pub s0: ::core::ffi::c_int,
    pub t0: ::core::ffi::c_int,
    pub width: ::core::ffi::c_int,
    pub height: ::core::ffi::c_int,
    pub flip_x: bool,
    pub flip_y: bool,
    pub cx: ::core::ffi::c_int,
    pub cy: ::core::ffi::c_int,
    pub scale_x: f32,
    pub scale_y: f32,
    pub theta: f32,
    pub filtering: bool,
    pub nx: ::core::ffi::c_int,
    pub ny: ::core::ffi::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rdpq_blitparms_s"][::core::mem::size_of::<rdpq_blitparms_s>() - 56usize];
    ["Alignment of rdpq_blitparms_s"][::core::mem::align_of::<rdpq_blitparms_s>() - 4usize];
    ["Offset of field: rdpq_blitparms_s::tile"]
        [::core::mem::offset_of!(rdpq_blitparms_s, tile) - 0usize];
    ["Offset of field: rdpq_blitparms_s::s0"]
        [::core::mem::offset_of!(rdpq_blitparms_s, s0) - 4usize];
    ["Offset of field: rdpq_blitparms_s::t0"]
        [::core::mem::offset_of!(rdpq_blitparms_s, t0) - 8usize];
    ["Offset of field: rdpq_blitparms_s::width"]
        [::core::mem::offset_of!(rdpq_blitparms_s, width) - 12usize];
    ["Offset of field: rdpq_blitparms_s::height"]
        [::core::mem::offset_of!(rdpq_blitparms_s, height) - 16usize];
    ["Offset of field: rdpq_blitparms_s::flip_x"]
        [::core::mem::offset_of!(rdpq_blitparms_s, flip_x) - 20usize];
    ["Offset of field: rdpq_blitparms_s::flip_y"]
        [::core::mem::offset_of!(rdpq_blitparms_s, flip_y) - 21usize];
    ["Offset of field: rdpq_blitparms_s::cx"]
        [::core::mem::offset_of!(rdpq_blitparms_s, cx) - 24usize];
    ["Offset of field: rdpq_blitparms_s::cy"]
        [::core::mem::offset_of!(rdpq_blitparms_s, cy) - 28usize];
    ["Offset of field: rdpq_blitparms_s::scale_x"]
        [::core::mem::offset_of!(rdpq_blitparms_s, scale_x) - 32usize];
    ["Offset of field: rdpq_blitparms_s::scale_y"]
        [::core::mem::offset_of!(rdpq_blitparms_s, scale_y) - 36usize];
    ["Offset of field: rdpq_blitparms_s::theta"]
        [::core::mem::offset_of!(rdpq_blitparms_s, theta) - 40usize];
    ["Offset of field: rdpq_blitparms_s::filtering"]
        [::core::mem::offset_of!(rdpq_blitparms_s, filtering) - 44usize];
    ["Offset of field: rdpq_blitparms_s::nx"]
        [::core::mem::offset_of!(rdpq_blitparms_s, nx) - 48usize];
    ["Offset of field: rdpq_blitparms_s::ny"]
        [::core::mem::offset_of!(rdpq_blitparms_s, ny) - 52usize];
};
pub type rdpq_blitparms_t = rdpq_blitparms_s;
unsafe extern "C" {
    pub fn tex_loader_init(
        tile: crate::rdpq::rdpq_tile_t,
        tex: *const crate::surface::surface_t,
    ) -> tex_loader_t;
    pub fn tex_loader_load(
        tload: *mut tex_loader_t,
        s0: ::core::ffi::c_int,
        t0: ::core::ffi::c_int,
        s1: ::core::ffi::c_int,
        t1: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn tex_loader_set_tmem_addr(tload: *mut tex_loader_t, tmem_addr: ::core::ffi::c_int);
    pub fn tex_loader_calc_max_height(
        tload: *mut tex_loader_t,
        s0: ::core::ffi::c_int,
        s1: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_tex_upload(
        tile: crate::rdpq::rdpq_tile_t,
        tex: *const crate::surface::surface_t,
        parms: *const rdpq_texparms_t,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_tex_upload_sub(
        tile: crate::rdpq::rdpq_tile_t,
        tex: *const crate::surface::surface_t,
        parms: *const rdpq_texparms_t,
        s0: ::core::ffi::c_int,
        t0: ::core::ffi::c_int,
        s1: ::core::ffi::c_int,
        t1: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_tex_upload_tlut(
        tlut: *mut u16,
        color_idx: ::core::ffi::c_int,
        num_colors: ::core::ffi::c_int,
    );
    pub fn rdpq_tex_reuse_sub(
        tile: crate::rdpq::rdpq_tile_t,
        parms: *const rdpq_texparms_t,
        s0: ::core::ffi::c_int,
        t0: ::core::ffi::c_int,
        s1: ::core::ffi::c_int,
        t1: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_tex_reuse(
        tile: crate::rdpq::rdpq_tile_t,
        parms: *const rdpq_texparms_t,
    ) -> ::core::ffi::c_int;
    pub fn rdpq_tex_multi_begin();
    pub fn rdpq_tex_multi_end() -> ::core::ffi::c_int;
    pub fn rdpq_tex_blit(
        surf: *const crate::surface::surface_t,
        x0: f32,
        y0: f32,
        parms: *const rdpq_blitparms_t,
    );
}
