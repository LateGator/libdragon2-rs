/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct kqueue_s {
    _unused: [u8; 0],
}
pub type kqueue_t = kqueue_s;
unsafe extern "C" {
    pub fn kqueue_new(size: ::core::ffi::c_int) -> *mut kqueue_t;
    pub fn kqueue_destroy(queue: *mut kqueue_t);
    pub fn kqueue_put(queue: *mut kqueue_t, element: *mut ::core::ffi::c_void);
    pub fn kqueue_get(queue: *mut kqueue_t) -> *mut ::core::ffi::c_void;
    pub fn kqueue_count(queue: *mut kqueue_t) -> ::core::ffi::c_int;
    pub fn kqueue_size(queue: *mut kqueue_t) -> ::core::ffi::c_int;
    pub fn kqueue_empty(queue: *mut kqueue_t) -> bool;
    pub fn kqueue_full(queue: *mut kqueue_t) -> bool;
    pub fn kqueue_peek(queue: *mut kqueue_t) -> *mut ::core::ffi::c_void;
}
