/* automatically generated by rust-bindgen 0.72.0 */

pub type sample_ptr_t = u32;
#[repr(C)]
pub struct samplebuffer_s {
    pub ptr_and_flags: sample_ptr_t,
    pub size: ::core::ffi::c_int,
    pub wpos: ::core::ffi::c_int,
    pub widx: ::core::ffi::c_int,
    pub ridx: ::core::ffi::c_int,
    pub wnext: ::core::ffi::c_int,
    pub state: *mut ::core::ffi::c_void,
    pub state_size: ::core::ffi::c_int,
    pub wave: *mut crate::mixer::waveform_t,
    pub wv_read: crate::mixer::WaveformRead,
    pub wave_uuid: u32,
}
pub type samplebuffer_t = samplebuffer_s;
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of samplebuffer_s"][::core::mem::size_of::<samplebuffer_s>() - 44usize];
    ["Alignment of samplebuffer_s"][::core::mem::align_of::<samplebuffer_s>() - 4usize];
    ["Offset of field: samplebuffer_s::ptr_and_flags"]
        [::core::mem::offset_of!(samplebuffer_s, ptr_and_flags) - 0usize];
    ["Offset of field: samplebuffer_s::size"]
        [::core::mem::offset_of!(samplebuffer_s, size) - 4usize];
    ["Offset of field: samplebuffer_s::wpos"]
        [::core::mem::offset_of!(samplebuffer_s, wpos) - 8usize];
    ["Offset of field: samplebuffer_s::widx"]
        [::core::mem::offset_of!(samplebuffer_s, widx) - 12usize];
    ["Offset of field: samplebuffer_s::ridx"]
        [::core::mem::offset_of!(samplebuffer_s, ridx) - 16usize];
    ["Offset of field: samplebuffer_s::wnext"]
        [::core::mem::offset_of!(samplebuffer_s, wnext) - 20usize];
    ["Offset of field: samplebuffer_s::state"]
        [::core::mem::offset_of!(samplebuffer_s, state) - 24usize];
    ["Offset of field: samplebuffer_s::state_size"]
        [::core::mem::offset_of!(samplebuffer_s, state_size) - 28usize];
    ["Offset of field: samplebuffer_s::wave"]
        [::core::mem::offset_of!(samplebuffer_s, wave) - 32usize];
    ["Offset of field: samplebuffer_s::wv_read"]
        [::core::mem::offset_of!(samplebuffer_s, wv_read) - 36usize];
    ["Offset of field: samplebuffer_s::wave_uuid"]
        [::core::mem::offset_of!(samplebuffer_s, wave_uuid) - 40usize];
};
unsafe extern "C" {
    pub fn samplebuffer_init(
        buf: *mut samplebuffer_t,
        uncached_mem: *mut u8,
        size: ::core::ffi::c_int,
        state_size: ::core::ffi::c_int,
    );
    pub fn samplebuffer_is_inited(buf: *mut samplebuffer_t) -> bool;
    pub fn samplebuffer_set_bps(buf: *mut samplebuffer_t, bps: ::core::ffi::c_int);
    pub fn samplebuffer_set_waveform(
        buf: *mut samplebuffer_t,
        wave: *mut crate::mixer::waveform_t,
        read: crate::mixer::WaveformRead,
    );
    pub fn samplebuffer_get(
        buf: *mut samplebuffer_t,
        wpos: ::core::ffi::c_int,
        wlen: *mut ::core::ffi::c_int,
    ) -> *mut ::core::ffi::c_void;
    pub fn samplebuffer_append(
        buf: *mut samplebuffer_t,
        wlen: ::core::ffi::c_int,
    ) -> *mut ::core::ffi::c_void;
    pub fn samplebuffer_undo(buf: *mut samplebuffer_t, wlen: ::core::ffi::c_int);
    pub fn samplebuffer_discard(buf: *mut samplebuffer_t, wpos: ::core::ffi::c_int);
    pub fn samplebuffer_flush(buf: *mut samplebuffer_t);
    pub fn samplebuffer_close(buf: *mut samplebuffer_t);
}
