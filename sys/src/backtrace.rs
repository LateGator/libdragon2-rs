/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct backtrace_frame_t {
    pub addr: u32,
    pub func: *const ::core::ffi::c_char,
    pub func_offset: u32,
    pub source_file: *const ::core::ffi::c_char,
    pub source_line: ::core::ffi::c_int,
    pub is_inline: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of backtrace_frame_t"][::core::mem::size_of::<backtrace_frame_t>() - 24usize];
    ["Alignment of backtrace_frame_t"][::core::mem::align_of::<backtrace_frame_t>() - 4usize];
    ["Offset of field: backtrace_frame_t::addr"]
        [::core::mem::offset_of!(backtrace_frame_t, addr) - 0usize];
    ["Offset of field: backtrace_frame_t::func"]
        [::core::mem::offset_of!(backtrace_frame_t, func) - 4usize];
    ["Offset of field: backtrace_frame_t::func_offset"]
        [::core::mem::offset_of!(backtrace_frame_t, func_offset) - 8usize];
    ["Offset of field: backtrace_frame_t::source_file"]
        [::core::mem::offset_of!(backtrace_frame_t, source_file) - 12usize];
    ["Offset of field: backtrace_frame_t::source_line"]
        [::core::mem::offset_of!(backtrace_frame_t, source_line) - 16usize];
    ["Offset of field: backtrace_frame_t::is_inline"]
        [::core::mem::offset_of!(backtrace_frame_t, is_inline) - 20usize];
};
unsafe extern "C" {
    pub fn backtrace_frame_print(frame: *mut backtrace_frame_t, out: *mut crate::stdio::FILE);
    pub fn backtrace_frame_print_compact(
        frame: *mut backtrace_frame_t,
        out: *mut crate::stdio::FILE,
        width: ::core::ffi::c_int,
    );
    pub fn backtrace(
        buffer: *mut *mut ::core::ffi::c_void,
        size: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
    pub fn backtrace_symbols(
        buffer: *mut *mut ::core::ffi::c_void,
        size: ::core::ffi::c_int,
    ) -> *mut *mut ::core::ffi::c_char;
    pub fn backtrace_symbols_cb(
        buffer: *mut *mut ::core::ffi::c_void,
        size: ::core::ffi::c_int,
        flags: u32,
        cb: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void, arg2: *mut backtrace_frame_t),
        >,
        cb_arg: *mut ::core::ffi::c_void,
    ) -> bool;
}
