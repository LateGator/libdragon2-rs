/* automatically generated by rust-bindgen 0.72.0 */

pub const DP_STATUS_DMEM_DMA: u32 = 1;
pub const DP_STATUS_FREEZE: u32 = 2;
pub const DP_STATUS_FLUSH: u32 = 4;
pub const DP_STATUS_GCLK_ALIVE: u32 = 8;
pub const DP_STATUS_TMEM_BUSY: u32 = 16;
pub const DP_STATUS_PIPE_BUSY: u32 = 32;
pub const DP_STATUS_BUSY: u32 = 64;
pub const DP_STATUS_BUFFER_READY: u32 = 128;
pub const DP_STATUS_DMA_BUSY: u32 = 256;
pub const DP_STATUS_END_VALID: u32 = 512;
pub const DP_STATUS_START_VALID: u32 = 1024;
pub const DP_WSTATUS_RESET_XBUS_DMEM_DMA: u32 = 1;
pub const DP_WSTATUS_SET_XBUS_DMEM_DMA: u32 = 2;
pub const DP_WSTATUS_RESET_FREEZE: u32 = 4;
pub const DP_WSTATUS_SET_FREEZE: u32 = 8;
pub const DP_WSTATUS_RESET_FLUSH: u32 = 16;
pub const DP_WSTATUS_SET_FLUSH: u32 = 32;
pub const DP_WSTATUS_RESET_TMEM_COUNTER: u32 = 64;
pub const DP_WSTATUS_RESET_PIPE_COUNTER: u32 = 128;
pub const DP_WSTATUS_RESET_CMD_COUNTER: u32 = 256;
pub const DP_WSTATUS_RESET_CLOCK_COUNTER: u32 = 512;
pub const mirror_t_MIRROR_DISABLED: mirror_t = 0;
pub const mirror_t_MIRROR_X: mirror_t = 1;
pub const mirror_t_MIRROR_Y: mirror_t = 2;
pub const mirror_t_MIRROR_XY: mirror_t = 3;
pub type mirror_t = ::core::ffi::c_uint;
pub const flush_t_FLUSH_STRATEGY_NONE: flush_t = 0;
pub const flush_t_FLUSH_STRATEGY_AUTOMATIC: flush_t = 1;
pub type flush_t = ::core::ffi::c_uint;
pub const sync_t_SYNC_FULL: sync_t = 0;
pub const sync_t_SYNC_PIPE: sync_t = 1;
pub const sync_t_SYNC_LOAD: sync_t = 2;
pub const sync_t_SYNC_TILE: sync_t = 3;
pub type sync_t = ::core::ffi::c_uint;
unsafe extern "C" {
    pub fn rdp_enable_blend_fill();
    pub fn rdp_load_texture(
        texslot: u32,
        texloc: u32,
        mirror: mirror_t,
        sprite: *mut crate::sprite::sprite_t,
    ) -> u32;
    pub fn rdp_load_texture_stride(
        texslot: u32,
        texloc: u32,
        mirror: mirror_t,
        sprite: *mut crate::sprite::sprite_t,
        offset: ::core::ffi::c_int,
    ) -> u32;
    pub fn rdp_draw_textured_rectangle(
        texslot: u32,
        tx: ::core::ffi::c_int,
        ty: ::core::ffi::c_int,
        bx: ::core::ffi::c_int,
        by: ::core::ffi::c_int,
        mirror: mirror_t,
    );
    pub fn rdp_draw_textured_rectangle_scaled(
        texslot: u32,
        tx: ::core::ffi::c_int,
        ty: ::core::ffi::c_int,
        bx: ::core::ffi::c_int,
        by: ::core::ffi::c_int,
        x_scale: f64,
        y_scale: f64,
        mirror: mirror_t,
    );
    pub fn rdp_draw_sprite(
        texslot: u32,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        mirror: mirror_t,
    );
    pub fn rdp_draw_sprite_scaled(
        texslot: u32,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        x_scale: f64,
        y_scale: f64,
        mirror: mirror_t,
    );
    pub fn rdp_set_blend_color(color: u32);
    pub fn rdp_draw_filled_triangle(x1: f32, y1: f32, x2: f32, y2: f32, x3: f32, y3: f32);
    pub fn rdp_set_texture_flush(flush: flush_t);
    pub fn rdp_init();
    pub fn rdp_close();
    pub fn rdp_detach();
    pub fn rdp_set_clipping(tx: u32, ty: u32, bx: u32, by: u32);
    pub fn rdp_set_default_clipping();
    pub fn rdp_sync(sync: sync_t);
    pub fn rdp_draw_filled_rectangle(
        tx: ::core::ffi::c_int,
        ty: ::core::ffi::c_int,
        bx: ::core::ffi::c_int,
        by: ::core::ffi::c_int,
    );
    pub fn rdp_enable_primitive_fill();
    pub fn rdp_enable_texture_copy();
}
