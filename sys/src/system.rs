/* automatically generated by rust-bindgen 0.72.0 */

pub const MAX_FILESYSTEMS: u32 = 10;
pub const MAX_OPEN_HANDLES: u32 = 4096;
pub type mode_t = ::core::ffi::c_int;
pub type time_t = ::core::ffi::c_longlong;
pub type stat = ();
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct filesystem_t {
    pub thread_safe: bool,
    pub open: ::core::option::Option<
        unsafe extern "C" fn(
            name: *mut ::core::ffi::c_char,
            flags: ::core::ffi::c_int,
        ) -> *mut ::core::ffi::c_void,
    >,
    pub fstat: ::core::option::Option<
        unsafe extern "C" fn(file: *mut ::core::ffi::c_void, st: *mut stat) -> ::core::ffi::c_int,
    >,
    pub stat: ::core::option::Option<
        unsafe extern "C" fn(name: *mut ::core::ffi::c_char, st: *mut stat) -> ::core::ffi::c_int,
    >,
    pub lseek: ::core::option::Option<
        unsafe extern "C" fn(
            file: *mut ::core::ffi::c_void,
            ptr: ::core::ffi::c_int,
            dir: ::core::ffi::c_int,
        ) -> ::core::ffi::c_int,
    >,
    pub read: ::core::option::Option<
        unsafe extern "C" fn(
            file: *mut ::core::ffi::c_void,
            ptr: *mut u8,
            len: ::core::ffi::c_int,
        ) -> ::core::ffi::c_int,
    >,
    pub write: ::core::option::Option<
        unsafe extern "C" fn(
            file: *mut ::core::ffi::c_void,
            ptr: *mut u8,
            len: ::core::ffi::c_int,
        ) -> ::core::ffi::c_int,
    >,
    pub close: ::core::option::Option<
        unsafe extern "C" fn(file: *mut ::core::ffi::c_void) -> ::core::ffi::c_int,
    >,
    pub unlink: ::core::option::Option<
        unsafe extern "C" fn(name: *mut ::core::ffi::c_char) -> ::core::ffi::c_int,
    >,
    pub findfirst: ::core::option::Option<
        unsafe extern "C" fn(
            path: *mut ::core::ffi::c_char,
            dir: *mut crate::dir::dir_t,
        ) -> ::core::ffi::c_int,
    >,
    pub findnext: ::core::option::Option<
        unsafe extern "C" fn(dir: *mut crate::dir::dir_t) -> ::core::ffi::c_int,
    >,
    pub findnext2: ::core::option::Option<
        unsafe extern "C" fn(
            path: *const ::core::ffi::c_char,
            dir: *mut crate::dir::dir_t,
        ) -> ::core::ffi::c_int,
    >,
    pub ftruncate: ::core::option::Option<
        unsafe extern "C" fn(
            file: *mut ::core::ffi::c_void,
            length: ::core::ffi::c_int,
        ) -> ::core::ffi::c_int,
    >,
    pub mkdir: ::core::option::Option<
        unsafe extern "C" fn(path: *mut ::core::ffi::c_char, mode: mode_t) -> ::core::ffi::c_int,
    >,
    pub ioctl: ::core::option::Option<
        unsafe extern "C" fn(
            file: *mut ::core::ffi::c_void,
            cmd: ::core::ffi::c_ulong,
            argp: *mut ::core::ffi::c_void,
        ) -> ::core::ffi::c_int,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of filesystem_t"][::core::mem::size_of::<filesystem_t>() - 60usize];
    ["Alignment of filesystem_t"][::core::mem::align_of::<filesystem_t>() - 4usize];
    ["Offset of field: filesystem_t::thread_safe"]
        [::core::mem::offset_of!(filesystem_t, thread_safe) - 0usize];
    ["Offset of field: filesystem_t::open"][::core::mem::offset_of!(filesystem_t, open) - 4usize];
    ["Offset of field: filesystem_t::fstat"][::core::mem::offset_of!(filesystem_t, fstat) - 8usize];
    ["Offset of field: filesystem_t::stat"][::core::mem::offset_of!(filesystem_t, stat) - 12usize];
    ["Offset of field: filesystem_t::lseek"]
        [::core::mem::offset_of!(filesystem_t, lseek) - 16usize];
    ["Offset of field: filesystem_t::read"][::core::mem::offset_of!(filesystem_t, read) - 20usize];
    ["Offset of field: filesystem_t::write"]
        [::core::mem::offset_of!(filesystem_t, write) - 24usize];
    ["Offset of field: filesystem_t::close"]
        [::core::mem::offset_of!(filesystem_t, close) - 28usize];
    ["Offset of field: filesystem_t::unlink"]
        [::core::mem::offset_of!(filesystem_t, unlink) - 32usize];
    ["Offset of field: filesystem_t::findfirst"]
        [::core::mem::offset_of!(filesystem_t, findfirst) - 36usize];
    ["Offset of field: filesystem_t::findnext"]
        [::core::mem::offset_of!(filesystem_t, findnext) - 40usize];
    ["Offset of field: filesystem_t::findnext2"]
        [::core::mem::offset_of!(filesystem_t, findnext2) - 44usize];
    ["Offset of field: filesystem_t::ftruncate"]
        [::core::mem::offset_of!(filesystem_t, ftruncate) - 48usize];
    ["Offset of field: filesystem_t::mkdir"]
        [::core::mem::offset_of!(filesystem_t, mkdir) - 52usize];
    ["Offset of field: filesystem_t::ioctl"]
        [::core::mem::offset_of!(filesystem_t, ioctl) - 56usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct stdio_t {
    pub stdin_read: ::core::option::Option<
        unsafe extern "C" fn(
            data: *mut ::core::ffi::c_char,
            len: ::core::ffi::c_uint,
        ) -> ::core::ffi::c_int,
    >,
    pub stdout_write: ::core::option::Option<
        unsafe extern "C" fn(
            data: *mut ::core::ffi::c_char,
            len: ::core::ffi::c_uint,
        ) -> ::core::ffi::c_int,
    >,
    pub stderr_write: ::core::option::Option<
        unsafe extern "C" fn(
            data: *mut ::core::ffi::c_char,
            len: ::core::ffi::c_uint,
        ) -> ::core::ffi::c_int,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of stdio_t"][::core::mem::size_of::<stdio_t>() - 12usize];
    ["Alignment of stdio_t"][::core::mem::align_of::<stdio_t>() - 4usize];
    ["Offset of field: stdio_t::stdin_read"][::core::mem::offset_of!(stdio_t, stdin_read) - 0usize];
    ["Offset of field: stdio_t::stdout_write"]
        [::core::mem::offset_of!(stdio_t, stdout_write) - 4usize];
    ["Offset of field: stdio_t::stderr_write"]
        [::core::mem::offset_of!(stdio_t, stderr_write) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rtc_hooks_t {
    pub gettime:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut time_t) -> ::core::ffi::c_int>,
    pub settime: ::core::option::Option<unsafe extern "C" fn(arg1: time_t) -> ::core::ffi::c_int>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rtc_hooks_t"][::core::mem::size_of::<rtc_hooks_t>() - 8usize];
    ["Alignment of rtc_hooks_t"][::core::mem::align_of::<rtc_hooks_t>() - 4usize];
    ["Offset of field: rtc_hooks_t::gettime"]
        [::core::mem::offset_of!(rtc_hooks_t, gettime) - 0usize];
    ["Offset of field: rtc_hooks_t::settime"]
        [::core::mem::offset_of!(rtc_hooks_t, settime) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct time_hooks_t {
    pub gettime: ::core::option::Option<unsafe extern "C" fn() -> time_t>,
    pub settime: ::core::option::Option<unsafe extern "C" fn(arg1: time_t) -> bool>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of time_hooks_t"][::core::mem::size_of::<time_hooks_t>() - 8usize];
    ["Alignment of time_hooks_t"][::core::mem::align_of::<time_hooks_t>() - 4usize];
    ["Offset of field: time_hooks_t::gettime"]
        [::core::mem::offset_of!(time_hooks_t, gettime) - 0usize];
    ["Offset of field: time_hooks_t::settime"]
        [::core::mem::offset_of!(time_hooks_t, settime) - 4usize];
};
unsafe extern "C" {
    pub fn attach_filesystem(
        prefix: *const ::core::ffi::c_char,
        filesystem: *mut filesystem_t,
    ) -> ::core::ffi::c_int;
    pub fn detach_filesystem(prefix: *const ::core::ffi::c_char) -> ::core::ffi::c_int;
    pub fn hook_stdio_calls(stdio_calls: *mut stdio_t) -> ::core::ffi::c_int;
    pub fn unhook_stdio_calls(stdio_calls: *mut stdio_t) -> ::core::ffi::c_int;
    pub fn hook_rtc_calls(hooks: *mut rtc_hooks_t) -> ::core::ffi::c_int;
    pub fn unhook_rtc_calls(hooks: *mut rtc_hooks_t) -> ::core::ffi::c_int;
    pub fn hook_time_calls(hooks: *mut time_hooks_t) -> ::core::ffi::c_int;
    pub fn unhook_time_calls(hooks: *mut time_hooks_t) -> ::core::ffi::c_int;
    pub fn hook_time_call(
        time_fn: ::core::option::Option<unsafe extern "C" fn() -> time_t>,
    ) -> ::core::ffi::c_int;
    pub fn unhook_time_call(
        time_fn: ::core::option::Option<unsafe extern "C" fn() -> time_t>,
    ) -> ::core::ffi::c_int;
}
